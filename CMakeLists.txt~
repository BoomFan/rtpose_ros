cmake_minimum_required(VERSION 2.8.3)
project(rtpose_ros)

###############################################################################
## Options
option( DEBUG_ACTIVE "Enable Debug build" ON )

if(DEBUG_ACTIVE)
    MESSAGE( "Debug compilation active" )
    set(ROS_BUILD_TYPE Debug)
    set(CMAKE_BUILD_TYPE Debug)
else()
    MESSAGE( "Release compilation active" )
    set(ROS_BUILD_TYPE Release)
    set(CMAKE_BUILD_TYPE Release)
endif()
###############################################################################

#add_definitions(-DCPU_ONLY=1)
add_definitions(-std=c++11)
#add_definitions(CMAKE_BUILD_TYPE=RELEASE)
#add_definitions(--allow=shlib-undefined)
set(CMAKE_CXX_FLAGS "-l:/usr/lib/x86_64-linux-gnu/libgflags.so ${CMAKE_CXX_FLAGS}")
set(CMAKE_CXX_FLAGS "-lpthread ${CMAKE_CXX_FLAGS}")

#add_definitions(-lgflags)
#set(CMAKE_CXX_FLAGS "-shared ${CMAKE_CXX_FLAGS}")
#set(CMAKE_CXX_FLAGS "--allow-shlib-undefined ${CMAKE_CXX_FLAGS}")

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS
  roscpp roslib std_msgs sensor_msgs image_transport cv_bridge
)

set(CAFFE_INCLUDEDIR caffe_rtpose/include caffe_rtpose/distribute/include)
set(CAFFE_LINK_LIBRARAY caffe_rtpose/build/lib)



## System dependencies are found with CMake's conventions
find_package(Boost REQUIRED COMPONENTS system)
find_package(OpenCV REQUIRED)

###################### Added by Fan Bu ##############################
FIND_PACKAGE(CUDA REQUIRED)
find_package(catkin REQUIRED COMPONENTS
  roscpp
  rospy
  std_msgs
)

SET(CUDA_NVCC_FLAGS "-arch=sm_13" CACHE STRING "nvcc flags" FORCE)
SET (CUDA_VERBOSE_BUILD ON CACHE BOOL "nvcc verbose" FORCE)
SET(LIB_TYPE STATIC) 
CUDA_ADD_LIBRARY(Lib ${LIB_TYPE} src/rtpose_node.cpp)
#ADD_LIBRARY(Lib ${LIB_TYPE} src/rtpose_node.cpp)

catkin_package(
)
include_directories(
  ${catkin_INCLUDE_DIRS}
)

###################### Added by Fan Bu ##############################

##################### OpenCV Packages by Fan Bu #####################
find_package(catkin REQUIRED COMPONENTS
  image_transport
  roscpp
  rosconsole
  sensor_msgs
  cv_bridge
  dynamic_reconfigure
)
catkin_package(
  CATKIN_DEPENDS
    roscpp
    rosconsole
    sensor_msgs
    opencv2
    cv_bridge
    image_transport
    dynamic_reconfigure
)
include_directories(
	${catkin_INCLUDE_DIRS} 
	${OpenCV_INCLUDE_DIRS}
	${PCL_INCLUDE_DIRS}
)

link_directories(${OpenCV_LIBRARY_DIRS})
##################### OpenCV Packages by Fan Bu #####################



## Uncomment this if the package has a setup.py. This macro ensures
## modules and global scripts declared therein get installed
## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html
# catkin_python_setup()

################################################
## Declare ROS messages, services and actions ##
################################################

## To declare and build messages, services or actions from within this
## package, follow these steps:
## * Let MSG_DEP_SET be the set of packages whose message types you use in
##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).
## * In the file package.xml:
##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET
##   * If MSG_DEP_SET isn't empty the following dependencies might have been
##     pulled in transitively but can be declared for certainty nonetheless:
##     * add a build_depend tag for "message_generation"
##     * add a run_depend tag for "message_runtime"
## * In this file (CMakeLists.txt):
##   * add "message_generation" and every package in MSG_DEP_SET to
##     find_package(catkin REQUIRED COMPONENTS ...)
##   * add "message_runtime" and every package in MSG_DEP_SET to
##     catkin_package(CATKIN_DEPENDS ...)
##   * uncomment the add_*_files sections below as needed
##     and list every .msg/.srv/.action file to be processed
##   * uncomment the generate_messages entry below
##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)

## Generate messages in the 'msg' folder
# add_message_files(
#   FILES
#   Message1.msg
#   Message2.msg
# )

## Generate services in the 'srv' folder
# add_service_files(
#   FILES
#   Service1.srv
#   Service2.srv
# )

## Generate actions in the 'action' folder
# add_action_files(
#   FILES
#   Action1.action
#   Action2.action
# )

## Generate added messages and services with any dependencies listed here
# generate_messages(
#   DEPENDENCIES
#   std_msgs  # Or other packages containing msgs
# )

###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## INCLUDE_DIRS: uncomment this if you package contains header files
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
#  INCLUDE_DIRS include
#  LIBRARIES ros_caffe
#  CATKIN_DEPENDS roscpp
#  DEPENDS system_lib
)

###########
## Build ##
###########

## Specify additional locations of header files
## Your package locations should be listed before other locations
# include_directories(include)
include_directories(
  ${catkin_INCLUDE_DIRS}
  ${OpenCV_INCLUDE_DIRS}
)
include_directories(${CAFFE_INCLUDEDIR})
## Declare a cpp library
# add_library(ros_caffe
#   src/${PROJECT_NAME}/ros_caffe.cpp
# )

## Declare a cpp executable
# add_executable(ros_caffe_node src/ros_caffe_node.cpp)

## Add cmake target dependencies of the executable/library
## as an example, message headers may need to be generated before nodes
# add_dependencies(ros_caffe_node ros_caffe_generate_messages_cpp)

## Specify libraries to link a library or executable target against
# target_link_libraries(ros_caffe_node
#   ${catkin_LIBRARIES}
# )

#############
## Install ##
#############

# all install targets should use catkin DESTINATION variables
# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html

## Mark executable scripts (Python etc.) for installation
## in contrast to setup.py, you can choose the destination
# install(PROGRAMS
#   scripts/my_python_script
#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark executables and/or libraries for installation
# install(TARGETS ros_caffe ros_caffe_node
#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark cpp header files for installation
# install(DIRECTORY include/${PROJECT_NAME}/
#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
#   FILES_MATCHING PATTERN "*.h"
#   PATTERN ".svn" EXCLUDE
# )

## Mark other files for installation (e.g. launch and bag files, etc.)
# install(FILES
#   # myfile1
#   # myfile2
#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
# )

#############
## Testing ##
#############

## Add gtest based cpp test target and link libraries
# catkin_add_gtest(${PROJECT_NAME}-test test/test_ros_caffe.cpp)
# if(TARGET ${PROJECT_NAME}-test)
#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})
# endif()

## Add folders to be run by python nosetests
# catkin_add_nosetests(test)
link_directories(${CAFFE_LINK_LIBRARAY})


########################### lint make -- Fan Bu ##############################
#set(CMAKE_SOURCE_DIR /caffe_rtpose)
#set(LINT_COMMAND ${CMAKE_SOURCE_DIR}/scripts/cpp_lint.py)
#set(SRC_FILE_EXTENSIONS h hpp hu c cpp cu cc)
#set(EXCLUDE_FILE_EXTENSTIONS pb.h pb.cc)
#set(LINT_DIRS include src/caffe examples tools python matlab)

#cmake_policy(SET CMP0009 NEW)  # suppress cmake warning

# find all files of interest
#foreach(ext ${SRC_FILE_EXTENSIONS})
#    foreach(dir ${LINT_DIRS})
#        file(GLOB_RECURSE FOUND_FILES ${CMAKE_SOURCE_DIR}/${dir}/*.${ext})
#        set(LINT_SOURCES ${LINT_SOURCES} ${FOUND_FILES})
#    endforeach()
#endforeach()

# find all files that should be excluded
#foreach(ext ${EXCLUDE_FILE_EXTENSTIONS})
#    file(GLOB_RECURSE FOUND_FILES ${CMAKE_SOURCE_DIR}/*.${ext})
#    set(EXCLUDED_FILES ${EXCLUDED_FILES} ${FOUND_FILES})
#endforeach()

# exclude generated pb files
#list(REMOVE_ITEM LINT_SOURCES ${EXCLUDED_FILES})
########################### lint make -- Fan Bu ##############################


add_executable(rtpose_node src/rtpose_node.cpp)
add_executable(rtpose_node_left src/rtpose_node_left.cpp)
add_executable(rtpose_node_right src/rtpose_node_right.cpp)
add_executable(rtpose_node_original_ros src/rtpose_node_original_ros.cpp)
add_executable(rtpose_node_just_sub src/rtpose_node_just_sub.cpp)
add_executable(rtpose_node_forecam src/rtpose_node_forecam.cpp)
target_link_libraries(
        rtpose_node
        ${catkin_LIBRARIES}
        ${OpenCV_LIBS}
    )

target_link_libraries(
        rtpose_node_left
        ${catkin_LIBRARIES}
        ${OpenCV_LIBS}
    )

target_link_libraries(
        rtpose_node_right
        ${catkin_LIBRARIES}
        ${OpenCV_LIBS}
    )

target_link_libraries(
        rtpose_node_original_ros
        ${catkin_LIBRARIES}
        ${OpenCV_LIBS}
    )


target_link_libraries(
        rtpose_node_just_sub
        ${catkin_LIBRARIES}
        ${OpenCV_LIBS}
    )

target_link_libraries(
        rtpose_node_forecam
        ${catkin_LIBRARIES}
        ${OpenCV_LIBS}
    )
add_dependencies(rtpose_node rtpose_node_left rtpose_node_right rtpose_node_original_ros rtpose_node_just_sub rtpose_node_forecam ${PROJECT_NAME}_gencfg)
ADD_DEPENDENCIES(rtpose_node rtpose_node_left rtpose_node_right rtpose_node_original_ros rtpose_node_just_sub rtpose_node_forecam Lib)
target_link_libraries(rtpose_node ${catkin_LIBRARIES} ${OpenCV_LIBRARIES} ${PCL_LIBRARIES} Lib caffe glog)
target_link_libraries(rtpose_node_left ${catkin_LIBRARIES} ${OpenCV_LIBRARIES} ${PCL_LIBRARIES} Lib caffe glog)
target_link_libraries(rtpose_node_right ${catkin_LIBRARIES} ${OpenCV_LIBRARIES} ${PCL_LIBRARIES} Lib caffe glog)
target_link_libraries(rtpose_node_original_ros ${catkin_LIBRARIES} ${OpenCV_LIBRARIES} ${PCL_LIBRARIES} Lib caffe glog)
target_link_libraries(rtpose_node_just_sub ${catkin_LIBRARIES} ${OpenCV_LIBRARIES} ${PCL_LIBRARIES} Lib caffe glog)
target_link_libraries(rtpose_node_forecam ${catkin_LIBRARIES} ${OpenCV_LIBRARIES} ${PCL_LIBRARIES} Lib caffe glog)
